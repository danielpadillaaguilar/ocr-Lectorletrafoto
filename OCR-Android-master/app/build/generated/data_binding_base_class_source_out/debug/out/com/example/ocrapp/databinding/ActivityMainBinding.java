// Generated by view binder compiler. Do not edit!
package com.example.ocrapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ocrapp.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnCopy;

  @NonNull
  public final MaterialButton btnSearch;

  @NonNull
  public final MaterialButton btnSend;

  @NonNull
  public final ShapeableImageView icScan;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final TextView resultTextView;

  @NonNull
  public final EditText searchEditText;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull MaterialButton btnCopy,
      @NonNull MaterialButton btnSearch, @NonNull MaterialButton btnSend,
      @NonNull ShapeableImageView icScan, @NonNull NestedScrollView nestedScrollView,
      @NonNull TextView resultTextView, @NonNull EditText searchEditText) {
    this.rootView = rootView;
    this.btnCopy = btnCopy;
    this.btnSearch = btnSearch;
    this.btnSend = btnSend;
    this.icScan = icScan;
    this.nestedScrollView = nestedScrollView;
    this.resultTextView = resultTextView;
    this.searchEditText = searchEditText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_copy;
      MaterialButton btnCopy = ViewBindings.findChildViewById(rootView, id);
      if (btnCopy == null) {
        break missingId;
      }

      id = R.id.btnSearch;
      MaterialButton btnSearch = ViewBindings.findChildViewById(rootView, id);
      if (btnSearch == null) {
        break missingId;
      }

      id = R.id.btn_send;
      MaterialButton btnSend = ViewBindings.findChildViewById(rootView, id);
      if (btnSend == null) {
        break missingId;
      }

      id = R.id.ic_scan;
      ShapeableImageView icScan = ViewBindings.findChildViewById(rootView, id);
      if (icScan == null) {
        break missingId;
      }

      id = R.id.nestedScrollView;
      NestedScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.resultTextView;
      TextView resultTextView = ViewBindings.findChildViewById(rootView, id);
      if (resultTextView == null) {
        break missingId;
      }

      id = R.id.searchEditText;
      EditText searchEditText = ViewBindings.findChildViewById(rootView, id);
      if (searchEditText == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, btnCopy, btnSearch, btnSend,
          icScan, nestedScrollView, resultTextView, searchEditText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
